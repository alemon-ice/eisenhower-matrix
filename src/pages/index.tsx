import { useState, useCallback, useEffect } from 'react'
import Head from 'next/head'
import { FaExternalLinkAlt, FaSearch, FaInfoCircle } from 'react-icons/fa'

import styles from 'shared/styles/Home.module.css'
import BoardModel from 'shared/models/Board'
import { IBoard, IList } from 'shared/interfaces/board'
import { Matrix } from 'shared/components/organisms'
import { ListCards } from 'shared/components/molecules';
import { EisenhowerMatrixDescription } from 'shared/utils/content'

const API_URL = 'http://localhost:3000/api'

export default function Home() {
  const [board, setBoard] = useState<BoardModel>()
  const [selectedList, setSelectedList] = useState<IList>()
  const [selectedListIndex, setSelectedListIndex] = useState<number>()
  const [activeInfo, setActiveInfo] = useState(false)

  function fetchBoard() {
    (async () => {
      const boardResponse: IBoard =
        await fetch(`${API_URL}/trello/board`).then(response => response.json())

      setBoard(new BoardModel(boardResponse))
    })()
  }

  function changeList(index: number) {
    setSelectedListIndex(index)
    setSelectedList(board.getList()[index])
  }

  function showInfo() {
    !activeInfo && setActiveInfo(true)
  }

  function hideInfo() {
    activeInfo && setActiveInfo(false)
  }

  const handleChangeList = useCallback(changeList, [board])
  const handleShowInfo = useCallback(showInfo, [activeInfo, setActiveInfo])
  const handleHideInfo = useCallback(hideInfo, [activeInfo, setActiveInfo])

  useEffect(fetchBoard, [])

  if (!board)
    return (
      <div className={styles.main}>
        <FaSearch size={25} className={styles.loading} />
      </div>
    )

  return (
    <div className={styles.container}>
      <Head>
        <title>{board.getName()}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          {`${board.getName()} `}
          <a href={board.getUrl()} target="_blank" rel="noopener noreferrer">
            <FaExternalLinkAlt size={15} />
          </a>
        </h1>

        <div className={styles.content}>
          <Matrix lists={board.getList()} handleChangeList={handleChangeList} />
          {selectedList ? (
            <ListCards
              list={selectedList}
              listIndex={selectedListIndex}
              activeInfo={activeInfo}
              handleShowInfo={handleShowInfo}
              handleHideInfo={handleHideInfo}
            />
          ) : null}
        </div>
      </main>
    </div>
  )
}
